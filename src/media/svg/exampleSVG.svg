<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
    "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve"
         width="200" height="200"
         viewBox="0 0 200 200" >
	
	<!-- Matthew Bystedt http://apike.ca 2012 -->
	
	<!-- Pattern Definition -->
	<defs>
        <linearGradient id="playgroundBG" x2="0%" y2="100%" >
            <stop offset="0%" stop-color="white" />
            <stop offset="90%" stop-color="silver" />
        </linearGradient>
	</defs>

	<!-- Background -->
	<rect x="0" y="0" width="100%" height="100%" fill="url(#playgroundBG)" />
    <rect x="10" y="10" width="170" height="170" fill="white" stroke="black" />
    
    <text x="10" y="191">Function: sin(x)*x</text>

    <!-- The inner svg fragment -->
    <svg id="innerSVG" onload="makeGraph(evt)"   x="10" y="10"
             width="170" height="170"
             viewBox="-50 -50 100 100" >
        
        <!-- Matthew Bystedt http://pike.port5.com 2003 -->

    <script type="text/ecmascript"> <![CDATA[

    function makeGraph (evt) {
        if ( window.svgDocument == null )
            svgDocument = evt.target.ownerDocument;
        
        var startx = -100;
        var length = 200;
        var times = 300;

        var svgns = "http://www.w3.org/2000/svg";
        
        shape = svgDocument.createElementNS(svgns, "polyline");

        shape.setAttributeNS(null, "fill", "none");
        shape.setAttributeNS(null, "stroke", "black");
        
        var interval = length / times;
        var pString = "";
        
        for (x = startx; x < startx + length; x = x + interval) {
                pString = pString + " " + (x) + ", " + -( (Math.sin(x)*x));
        }

        shape.setAttributeNS(null, "points", pString);
            
        svgDocument.getElementById("innerSVG").appendChild(shape);
        window.status = "Graph plotted";
    }

    function overGraph (evt) {
        var shape = svgDocument.getElementById("marker");
        x = (evt.clientX-10)/170 * 100 -50;
        window.status = "Graph plotted" + x;
        shape.setAttributeNS(null, "cx", x);
        shape.setAttributeNS(null, "cy", -( (Math.sin(x)*x)));
    }
    
    ]]></script>
        
        <!-- Pattern Definition -->
        <defs>
            <pattern id="rulerPattern" patternUnits="userSpaceOnUse"
                    x="0" y="0" width="10" height="10"
                    viewBox="0 0 10 10" >
                    
                <line x1="0" y1="0" x2="10" y2="0" stroke="lightblue" fill="none" stroke-dasharray="2,2" />
                <line x1="0" y1="0" x2="0" y2="10" stroke="lightblue" fill="none" stroke-dasharray="2,2" />
            </pattern> 
        </defs>

        <!-- Background -->
        <rect x="-50" y="-50" width="100" height="100" fill="url(#rulerPattern)" />
        <circle id="marker" cx="-500" cy="-500" r="2" stroke="blue" fill="none" />
        
        <g opacity="0.5">
            <line x1="-50" y1="0" x2="50" y2="0" fill="none" stroke="red" />
            <line x1="0" y1="-50" x2="0" y2="50" fill="none" stroke="red" />
        </g>
    </svg>

    
</svg>